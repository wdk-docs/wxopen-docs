# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, nosy
# This file is distributed under the same license as the wxopen-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: wxopen-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-11 22:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/mobile/guide/wp8.rst:2
msgid ":wxopen:`WP8接入指南 <open1419315810>`"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:4
msgid "注：本文为微信WP8终端开发工具的新手使用教程，只涉及教授SDK的使用方法，默认读者已经熟悉VS2012的基本使用方法，以及具有一定的编程知识基础等。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:7
msgid "1.申请你的AppID"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:9
msgid ""
"请到 开发者应用登记页面 "
"进行登记，登记并选择移动应用进行设置后，将获得AppID，可立即用于开发。但应用登记完成后还需要提交审核，只有审核通过的应用才能正式发布使用。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:12
msgid "2.微信终端SDK开发包"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:14
msgid "SDK开发包包含3个文件："
msgstr ""

#: ../../source/mobile/guide/wp8.rst:16
msgid "-MicroMsgSDK.dll（每个第三方应用必须要导入该sdk库，用于实现与微信的交互）"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:18
msgid "-MicroMsgSDK.XML（API文档，放到与MicroMsgSDK.dll相同的目录，在VS中可以提供帮助，如查看函数注释）"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:20
msgid "-Google.ProtocolBuffersLite.dll（Google的ProtocolBuffer开源库，用于序列化数据，引入即可）"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:22
msgid "请前往“资源下载页 ”下载最新SDK包"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:25
msgid "3.搭建开发环境"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:27
msgid "[1] 在VS2012中建立你的工程。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:29
msgid ""
"[2] 如下图所示，右键点击工程的References，在快捷菜单中选择Add "
"References，在打开的弹出框上点击“Browser”按钮，然后选择 WP8平台SDK开发包 中的两个dll文件。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:33
msgid "[3] 引入SDK的dll后，在References下可以看到引入的dll库。（如下图所示）。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:37
msgid "SDK的名字空间为MicroMsg.sdk，在使用前先导入此名字空间。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:39
msgid "using MicroMsg.sdk;"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:42
msgid "4.在代码中使用SDK开发包"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:44
msgid "[1] 发送请求或响应到微信"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:46
msgid "现在，你的程序要发送请求或响应给微信，可以通过IWXAPI的 sendReq 和 sendResp 两个函数来实现。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:48
msgid "boolean sendReq(BaseReq req);"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:50
msgid "sendReq是第三方app主动发送请求给微信，发送请求后会拉起微信应用，微信对请求进行处理后，会发送响应回App。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:52
msgid "boolean sendResp(BaseResp resp);"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:54
msgid "sendResp场景：微信先向第三方app发送请求，拉起第三方App界面，当用户操作完成后，第三方app通过sendResp发送响应数据给微信，拉起微信界面。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:56
msgid "sendReq示例："
msgstr ""

#: ../../source/mobile/guide/wp8.rst:58
msgid "try"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:60 ../../source/mobile/guide/wp8.rst:80
msgid "{"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:62
msgid "int scene = SendMessageToWX.Req.WXSceneSession; //发给微信朋友`"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:64
msgid "WXTextMessage message = new WXTextMessage();"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:66
msgid "message.Title = \"文本\";"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:68
msgid "message.Text = \"这是一段文本内容\";"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:70
msgid "SendMessageToWX.Req req = new SendMessageToWX.Req(message, scene);"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:72
msgid "IWXAPI api = WXAPIFactory.CreateWXAPI(AppID);"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:74
msgid "api.SendReq(req);"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:76 ../../source/mobile/guide/wp8.rst:84
msgid "}"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:78
msgid "catch (WXException ex)"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:82
msgid "MessageBox.Show(ex.Message);"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:86
msgid "AppID为你在微信开放平台网站上登记应用得到的AppID。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:88
msgid "需要注意的是，SendMessageToWX.Req的scene参数，如果scene填WXSceneSession，那么消息会发送给微信好友。如果scene填WXSceneTimeline，那么消息会发送至朋友圈。如果scene填WXSceneChooseByUser，那么会由用户来选择发送给好友还是发到朋友圈。scene默认值为WXSceneChooseByUser。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:90
msgid "sendResp示例："
msgstr ""

#: ../../source/mobile/guide/wp8.rst:92
msgid ""
"try { WXTextMessage message = new WXTextMessage(); message.Title = "
"\"文本\"; message.Text = \"这是一段文本内容\"; GetMessageFromWX.Resp resp = new "
"GetMessageFromWX.Resp(req.Transaction, req.Username, message); IWXAPI api"
" = WXAPIFactory.CreateWXAPI(AppID); api.SendResp(resp); } catch "
"(WXException ex) { MessageBox.Show(ex.Message); } "
"req为微信向你的应用发送请求时传过来的数据对象。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:107
msgid "具体要发送的内容由第三方app开发者定义，SDK支持文本、图片、文件、链接、表情、音乐、视频、自定义等多种消息内容。具体可参考Demo源码。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:109
msgid "[2] 处理微信的请求和响应"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:111
msgid "如果你的程序需要接收微信发送的请求和响应，需要下面4步操作：a.修改WMAppManifest.xml"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:113
msgid "a.修改WMAppManifest.xml"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:115
msgid ""
"右键点击应用的Properties下的WMAppManifest.xml，选择Open with...，然后选择Xml (Text) "
"Editer打开该文件。在的前面，加上以下标签代码(如果你的文件中已经存在标签，则添加在已有的标签下)"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:119
msgid ""
"上面Xml片段中有两处需要修改的，一个是Name=\"SDK_DEMO\"，改成任意你喜欢的名字，两个支持的FileType，一个是.wechatapp，"
" "
"另外一个是.wx3b34a14b66641dfd，其中“wx3b34a14b66641dfd”改成你在微信开放平台上登记应用时得到的AppID，这个务必要写对，不然微信拉不起你的应用。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:121
msgid "编写微信入口Page类"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:123
msgid "继承WXEntryBasePage类，并覆写下表中的函数，来处理来自微信的请求和响应，微信发送的数据，已经填到了参数中，可直接取用。注意：如果覆写OnNavigatedTo函数，需要调用base.OnNavigatedTo，以保证父类中的逻辑得以执行。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:127
msgid "继承系统的UriMapperBase类"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:129
msgid "大致逻辑如下："
msgstr ""

#: ../../source/mobile/guide/wp8.rst:131
msgid ""
"class AssociationUriMapper : UriMapperBase { private string tempUri; "
"public override Uri MapUri(Uri uri) { tempUri = uri.ToString(); // "
"根据文件类型打开程序 if (tempUri.Contains(\"/FileTypeAssociation\")) { // 获取fileID "
"(after \"fileToken=\"). int fileIDIndex = tempUri.IndexOf(\"fileToken=\")"
" + 10; string fileID = tempUri.Substring(fileIDIndex); // 获取文件名.string "
"incommingFileName = SharedStorageAccessManager.GetSharedFileName(fileID);"
" // 获取文件后缀 int extensionIndex = "
"incommingFileName.LastIndexOf(&#39;.&#39;) + 1; string incommingFileType "
"= incommingFileName.Substring(extensionIndex).ToLower(); // "
"根据不同文件类型，跳转不同参数的地址 switch (incommingFileType) { case "
"\"wx3b34a14b66641dfd\": return new Uri(\"/DemoEntryPage.xaml?fileToken=\""
" + fileID, UriKind.Relative); default: return new Uri(\"/MainPage.xaml\","
" UriKind.Relative); } } else { return uri; } } } case "
"'wx3b34a14b66641dfd': 改成你的AppID。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:164
msgid "\"/DemoEntryPage.xaml?fileToken=\" 改成步骤b中继承WXEntryBasePage的Page的路径。"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:166
msgid "修改App.xaml.cs文件"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:168
msgid "然后在App.xaml.cs的InitializePhoneApplication()函数中，增加一行代码："
msgstr ""

#: ../../source/mobile/guide/wp8.rst:170
msgid "// Assign the URI-mapper class to the application frame."
msgstr ""

#: ../../source/mobile/guide/wp8.rst:172
msgid "RootFrame.UriMapper = new AssociationUriMapper();"
msgstr ""

#: ../../source/mobile/guide/wp8.rst:174
msgid "注意："
msgstr ""

#: ../../source/mobile/guide/wp8.rst:176
msgid ""
"在测试的时候，确保你安装的WP8的微信(4.0以上版本) "
"不要在Demo的上修改来形成你的应用程序，因为如果其他人跟你一样做，你们的AppStore上的AppID是一样的。 微信SDK Sample "
"Demo源码"
msgstr ""

