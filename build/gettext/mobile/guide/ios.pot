# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, nosy
# This file is distributed under the same license as the wxopen-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: wxopen-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-11 22:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/mobile/guide/ios.rst:2
msgid ":wxopen:`iOS接入指南 <1417694084>`"
msgstr ""

#: ../../source/mobile/guide/ios.rst:4
msgid "注：本文为微信iOS终端SDK新手使用教程，只涉及教授SDK的使用方法，默认读者已经熟悉XCode开发工具的基本使用方法，以及具有一定的编程知识基础等。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:7
msgid "1.向微信注册你的应用程序id"
msgstr ""

#: ../../source/mobile/guide/ios.rst:9
msgid "请到 开发者应用登记页面 进行登记，登记并选择移动应用进行设置后，将获得AppID，可立即用于开发。但应用登记完成后还需要提交审核，只有审核通过的应用才能正式发布使用。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:12
msgid "2.下载微信终端SDK文件"
msgstr ""

#: ../../source/mobile/guide/ios.rst:14
msgid "SDK文件包括 libWeChatSDK.a，WXApi.h，WXApiObject.h 三个。 如选用手动集成，请前往“资源下载页”下载最新SDK包"
msgstr ""

#: ../../source/mobile/guide/ios.rst:18
msgid "3.搭建开发环境"
msgstr ""

#: ../../source/mobile/guide/ios.rst:21
msgid "3.1 通过CocoaPods集成"
msgstr ""

#: ../../source/mobile/guide/ios.rst:23
#: ../../source/mobile/guide/ios.rst:75
msgid "[1] 在XCode中建立你的工程。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:25
msgid "[2] 在工程的Podfile里面添加以下代码："
msgstr ""

#: ../../source/mobile/guide/ios.rst:27
msgid "pod 'WechatOpenSDK' 保存并执行pod install,然后用后缀为.xcworkspace的文件打开工程。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:30
msgid "注意:"
msgstr ""

#: ../../source/mobile/guide/ios.rst:32
msgid "命令行下执行pod search WechatOpenSDK,如显示的WechatOpenSDK版本不是最新的，则先执行pod repo update操作更新本地repo的内容"
msgstr ""

#: ../../source/mobile/guide/ios.rst:34
msgid "关于CocoaPods的更多信息请查看 CocoaPods官方网站 。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:36
msgid "[3] 在Xcode中，选择你的工程设置项，选中“TARGETS”一栏，在“info”标签栏的“URL type“添加“URL scheme”为你所注册的应用程序id（如下图所示）。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:40
#: ../../source/mobile/guide/ios.rst:96
msgid "Xcode设置URL scheme"
msgstr ""

#: ../../source/mobile/guide/ios.rst:42
msgid "[4] 在你需要使 用微信终端API的文件中import WXApi.h 头文件，并增加 WXApiDelegate 协议。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:55
msgid "常见问题："
msgstr ""

#: ../../source/mobile/guide/ios.rst:57
msgid "对于之前SDK放在主工程目录下，切换成CocoaPods的形式，执行pod install 之后，出现"
msgstr ""

#: ../../source/mobile/guide/ios.rst:60
msgid "Use the $(inherited) flag, or"
msgstr ""

#: ../../source/mobile/guide/ios.rst:62
msgid "Remove the build settings from the target."
msgstr ""

#: ../../source/mobile/guide/ios.rst:64
msgid "解决方法是 把工程target中的build Setting里面PODS_ROOT的值替换成$(inherited)"
msgstr ""

#: ../../source/mobile/guide/ios.rst:66
msgid "Other Linker Flags中 -all_load 替换成$(inherited)"
msgstr ""

#: ../../source/mobile/guide/ios.rst:73
msgid "3.2 手动集成"
msgstr ""

#: ../../source/mobile/guide/ios.rst:77
msgid "[2] 将SDK文件中包含的 libWeChatSDK.a，WXApi.h，WXApiObject.h 三个文件添加到你所建的工程中（如下图所示，建立了一个名为Test 的工程，并把以上三个文件添加到Test文件夹下）。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:79
#: ../../source/mobile/guide/ios.rst:87
msgid "(注：请使用xCode4.5及以上版本)"
msgstr ""

#: ../../source/mobile/guide/ios.rst:83
msgid "[3]微信开放平台新增了微信模块用户统计功能，便于开发者统计微信功能模块的用户使用和活跃情况。开发者需要在工程中链接上:SystemConfiguration.framework, libz.dylib, libsqlite3.0.dylib, libc++.dylib, Security.framework, CoreTelephony.framework, CFNetwork.framework，CoreGraphics.framework。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:85
msgid "[4] 在你的工程文件中选择Build Setting，在\"Other Linker Flags\"中加入\"-Objc -all_load\"，在Search Paths中添加 libWeChatSDK.a ，WXApi.h，WXApiObject.h，文件所在位置（如下图所示）。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:92
msgid "[5] 在Xcode中，选择你的工程设置项，选中“TARGETS”一栏，在“info”标签栏的“URL type“添加“URL scheme”为你所注册的应用程序id（如下图所示）。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:98
msgid "[6] 在Xcode中，选择你的工程设置项，选中“TARGETS”一栏，在“info”标签栏的“LSApplicationQueriesSchemes“添加weixin（如下图所示）。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:102
msgid "[7] 在你需要使 用微信终端API的文件中import WXApi.h 头文件，并增加 WXApiDelegate 协议。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:116
msgid "4.在代码中使用开发工具包"
msgstr ""

#: ../../source/mobile/guide/ios.rst:118
msgid "[1] 要使你的程序启动后微信终端能响应你的程序，必须在代码中向微信终端注册你的id。（如下图所示，在 AppDelegate 的 didFinishLaunchingWithOptions 函数中向微信注册id）。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:128
msgid "[2] 重写AppDelegate的handleOpenURL和openURL方法："
msgstr ""

#: ../../source/mobile/guide/ios.rst:140
msgid "[3] 现在，你的程序要实现和微信终端交互的具体请求与回应，因此需要实现WXApiDelegate协议的两个方法："
msgstr ""

#: ../../source/mobile/guide/ios.rst:146
msgid "是微信终端向第三方程序发起请求，要求第三方程序响应。第三方程序响应完后必须调用sendRsp返回。在调用sendRsp返回时，会切回到微信终端程序界面。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:152
msgid "如果第三方程序向微信发送了sendReq的请求，那么onResp会被回调。sendReq请求调用后，会切到微信终端程序界面。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:154
msgid "具体在此两方法中所要完成的内容由你定义，具体可参考微信开发工具包中的SDK Sample Demo源码。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:156
msgid "[4] 如果你的程序要发消息给微信，那么需要调用WXApi的sendReq函数："
msgstr ""

#: ../../source/mobile/guide/ios.rst:162
msgid "其中req参数为SendMessageToWXReq类型。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:164
msgid "需要注意的是，SendMessageToWXReq的scene成员，如果scene填WXSceneSession，那么消息会发送至微信的会话内。如果scene填WXSceneTimeline，那么消息会发送至朋友圈。如果scene填WXSceneFavorite,那么消息会发送到“我的收藏”中。scene默认值为WXSceneSession。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:167
msgid "至此，你已经能使用微信终端SDK的API内容了。如果想更详细了解每个API函数的用法，请查阅 官网API文档 或自行下载阅读微信SDK Sample Demo源码。"
msgstr ""

#: ../../source/mobile/guide/ios.rst:169
msgid "微信 :download:`SDK Sample Demo <path>` 源码"
msgstr ""

